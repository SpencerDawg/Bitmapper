<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAHBoAAAEAGAAYCQAAFgAAACgAAAAcAAAANAAAAAEAGAAAAAAAGAkAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4O
        Dg4ODg4ODg4ODg4ODg4ODg4ODg4AAAAAAAAAAAAAAAAODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4O
        Dg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4AAAAAAAAyMqwyMqwODg4O
        Dg4/QlQ/QlQ/QlQ/QlQ6Kzo6Kzo6Kzo6Kzo6Kzo6Kzo/QlQ/QlQ/QlQ/QlQ6Kzo6Kzo6Kzo6Kzo6Kzo6
        KzoODg4ODg6KQnaKQnYyMqwyMqwODg4ODg4/QlQ/QlQ/QlQ/QlQ6Kzo6Kzo6Kzo6Kzo6Kzo6Kzo/QlQ/
        QlQ/QlQ/QlQ6Kzo6Kzo6Kzo6Kzo6Kzo6KzoODg4ODg6KQnaKQnYyMqwyMqwODg4ODg4/QlQ/QlQ/QlQ/
        QlQ6Kzo6Kzo6Kzo6Kzo6Kzo6Kzo/QlQ/QlQ/QlQ/QlQ6Kzo6Kzo6Kzo6Kzo6Kzo6KzoODg4ODg6KQnaK
        QnYyMqwyMqwODg4ODg4/QlQ/QlQ/QlQ/QlQ6Kzo6Kzo6Kzo6Kzo6Kzo6Kzo/QlQ/QlQ/QlQ/QlQ6Kzo6
        Kzo6Kzo6Kzo6Kzo6KzoODg4ODg6KQnaKQnYyMqwyMqwODg4ODg4/QlQ/QlQ/QlQ/QlQ6Kzo6Kzo6Kzo6
        Kzo6Kzo6Kzo/QlQ/QlQ/QlQ/QlQ6Kzo6Kzo6Kzo6Kzo6Kzo6KzoODg4ODg6KQnaKQnYyMqwyMqwODg4O
        Dg4/QlQ/QlQ/QlQ/QlQ6Kzo6Kzo6Kzo6Kzo6Kzo6Kzo/QlQ/QlQ/QlQ/QlQ6Kzo6Kzo6Kzo6Kzo6Kzo6
        KzoODg4ODg6KQnaKQnYyMqwyMqwODg4ODg4/QlQ/QlQ/QlQ/QlQ/QlQ/QlQ/QlQ/QlQ/QlQ/QlQ/QlQ/
        QlQ/QlQ/QlQ6Kzo6Kzo6Kzo6Kzo6Kzo6KzoODg4ODg6KQnaKQnYyMqwyMqwODg4ODg4/QlQ/QlQ/QlQ/
        QlQ/QlQ/QlQ/QlQ/QlQ/QlQ/QlQ/QlQ/QlQ/QlQ/QlQ6Kzo6Kzo6Kzo6Kzo6Kzo6KzoODg4ODg6KQnaK
        QnYODg4ODg4ODg4ODg4/QlQ/QlQ/QlQ/QlQ/QlQ/QlQ/QlQ/QlQ/QlQ/QlQ/QlQ/QlQ/QlQ/QlQ6Kzo6
        Kzo6Kzo6Kzo6Kzo6KzoODg4ODg6KQnaKQnYODg4ODg4ODg4ODg4/QlQ/QlQ/QlQ/QlQ/QlQ/QlQ/QlQ/
        QlQ/QlQ/QlQ/QlQ/QlQ/QlQ/QlQ6Kzo6Kzo6Kzo6Kzo6Kzo6KzoODg4ODg6KQnaKQnYODg4ODg5RJHdR
        JHc6Kzo6Kzo/QlQ/QlQ/QlQ/QlQ/QlQ/QlQ/QlQ/QlQ6Kzo6Kzo6Kzo6KzpDHqtDHqtDHqtDHqtDHqtD
        HqtDHqtDHqsODg4ODg4ODg4ODg5RJHdRJHc6Kzo6Kzo/QlQ/QlQ/QlQ/QlQ/QlQ/QlQ/QlQ/QlQ6Kzo6
        Kzo6Kzo6KzpDHqtDHqtDHqtDHqtDHqtDHqtDHqtDHqsODg4ODg4ODg4ODg5RJHdRJHc6Kzo6Kzo6Kzo6
        Kzo6Kzo6Kzo6Kzo6Kzo6Kzo6Kzo6Kzo6KzpDHqtDHqtDHqtDHqtDHqtDHqtDHqtDHqtDHqtDHqsODg4O
        Dg4ODg4ODg5RJHdRJHc6Kzo6Kzo6Kzo6Kzo6Kzo6Kzo6Kzo6Kzo6Kzo6Kzo6Kzo6KzpDHqtDHqtDHqtD
        HqtDHqtDHqtDHqtDHqtDHqtDHqsODg4ODg4ODg4ODg5RJHdRJHdDHqtDHqs6Kzo6Kzo6Kzo6Kzo6Kzo6
        Kzo6Kzo6Kzo6Kzo6KzpDHqtDHqtDHqtDHqtDHqtDHqtDHqtDHqsdNcQdNcQODg4ODg4ODg4ODg5RJHdR
        JHdDHqtDHqs6Kzo6Kzo6Kzo6Kzo6Kzo6Kzo6Kzo6Kzo6Kzo6KzpDHqtDHqtDHqtDHqtDHqtDHqtDHqtD
        HqsdNcQdNcQODg4ODg4yMqwyMqwODg4ODg5DHqtDHqs6Kzo6Kzo6Kzo6Kzo6Kzo6Kzo6Kzo6KzodNcQd
        NcQdNcQdNcQdNcQdNcQdNcQdNcQdNcQdNcQODg4ODg6KQnaKQnYyMqwyMqwODg4ODg5DHqtDHqs6Kzo6
        Kzo6Kzo6Kzo6Kzo6Kzo6Kzo6KzodNcQdNcQdNcQdNcQdNcQdNcQdNcQdNcQdNcQdNcQODg4ODg6KQnaK
        QnYyMqwyMqwODg4ODg5RJHdRJHdRJHdRJHc6Kzo6Kzo6Kzo6KzpDHqtDHqtDHqtDHqtDHqtDHqtDHqtD
        HqsdNcQdNcQODg4ODg6KQnaKQnaKQnaKQnYyMqwyMqwODg4ODg5RJHdRJHdRJHdRJHc6Kzo6Kzo6Kzo6
        KzpDHqtDHqtDHqtDHqtDHqtDHqtDHqtDHqsdNcQdNcQODg4ODg6KQnaKQnaKQnaKQnYyMqwyMqwyMqwy
        MqwODg4ODg5RJHdRJHdDHqtDHqtDHqtDHqtDHqtDHqtDHqtDHqtDHqtDHqtRJHdRJHcODg4ODg6KQnaK
        QnaKQnaKQnaKQnaKQnYyMqwyMqwyMqwyMqwODg4ODg5RJHdRJHdDHqtDHqtDHqtDHqtDHqtDHqtDHqtD
        HqtDHqtDHqtRJHdRJHcODg4ODg6KQnaKQnaKQnaKQnaKQnaKQnYAAAAAAAAyMqwyMqwODg4ODg4ODg4O
        Dg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg6KQnaKQnaKQnaKQnaKQnaKQnYAAAAA
        AAAAAAAAAAAyMqwyMqwODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4O
        Dg6KQnaKQnaKQnaKQnaKQnaKQnYAAAAAAADAAAAwwAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADAAAAwwAAAMA==
</value>
  </data>
</root>